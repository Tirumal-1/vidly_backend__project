{"message":"Something failed during startup.","stack":"Error: Something failed during startup.\n    at Object.<anonymous> (/Users/moshfeghhamedani/Desktop/node-course/vidly/index.js:29:7)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3","level":"error","timestamp":"2018-02-06T20:32:44.656Z"}
{"message":"Something failed miserably!","stack":"Error: Something failed miserably!\n    at Object.<anonymous> (/Users/moshfeghhamedani/Desktop/node-course/vidly/index.js:34:26)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3","level":"error","timestamp":"2018-02-06T20:53:50.001Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:42.521Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:43.301Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:52.096Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:53.806Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-02-06T21:34:26.743Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-02-06T21:39:24.124Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T07:19:49.438Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-01T07:19:49.498Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T07:21:50.650Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-01T07:21:50.698Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T07:23:48.609Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-01T07:23:48.650Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T07:25:27.492Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T07:25:27.521Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T09:52:02.521Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-01T09:52:02.548Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T09:52:41.624Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T09:52:41.651Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T09:52:52.470Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T09:52:52.500Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T10:03:01.409Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T10:03:01.435Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T10:54:30.037Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T10:54:30.130Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:24:04.925Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:24:05.034Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:24:08.889Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:24:08.975Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:24:39.208Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:24:39.380Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:25:17.100Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:25:17.208Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:25:26.353Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:25:26.443Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:25:30.991Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:25:31.117Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:25:39.221Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:25:39.347Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:25:54.550Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:25:54.635Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:17.224Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:17.342Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:21.528Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:21.624Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:26.362Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:26.484Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:30.991Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:31.076Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:35.739Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:35.865Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:40.527Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:40.640Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:45.053Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:45.146Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:26:49.656Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:26:49.761Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:04.650Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:04.752Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:09.110Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:09.204Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:13.730Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:13.840Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:18.097Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:18.226Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:22.965Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:23.081Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:28.961Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:29.056Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:33.906Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:34.007Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:38.515Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:38.612Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:43.422Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:43.514Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:47.757Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:47.840Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:52.086Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:52.173Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:27:56.512Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:27:56.607Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:01.440Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:01.544Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:05.694Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:05.790Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:10.039Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:10.122Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:14.350Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:14.456Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:18.407Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:18.512Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:24.176Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:24.259Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:28.393Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:28.488Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:32.872Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:33.028Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:38.197Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:38.303Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:42.732Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:42.863Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:47.123Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:47.223Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:28:51.261Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:28:51.356Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:40:41.758Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:40:41.877Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:40:49.939Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:40:50.044Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T11:42:34.242Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T11:42:34.268Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T11:42:34.439Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T11:42:34.670Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T11:42:34.762Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T12:36:32.110Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T12:36:32.131Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T12:36:32.156Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T12:36:32.157Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:36:32.255Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:36:32.439Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:36:32.514Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T12:44:30.884Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T12:44:31.054Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T12:44:31.083Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T12:44:31.109Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:44:31.200Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:44:31.419Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:44:31.514Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T12:45:02.358Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T12:45:02.457Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T12:45:02.549Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T12:45:02.576Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:45:02.674Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:45:02.879Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T12:45:02.997Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T13:13:49.623Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T13:13:49.773Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T13:13:49.946Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T13:13:50.134Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T13:13:50.166Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T13:13:50.195Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T13:13:50.252Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T13:34:55.599Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T13:34:55.687Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-01T13:35:13.526Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly_tests...","timestamp":"2025-07-01T13:35:13.582Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T13:35:13.694Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T13:35:13.929Z"}
{"message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at model.Query.exec (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (C:\\Users\\Administrator\\OneDrive\\Desktop\\vscode\\vidly_new\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2025-07-01T13:35:14.050Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-03T09:01:17.333Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-03T09:01:17.862Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-03T09:06:43.957Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-03T09:06:44.011Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-03T09:45:38.867Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-03T09:45:38.922Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2025-07-03T10:48:38.453Z"}
{"level":"info","message":"Connected to $mongodb://localhost/vidly...","timestamp":"2025-07-03T10:48:38.520Z"}
